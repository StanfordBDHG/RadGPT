//
// This source file is part of the Stanford Biodesign Digital Health RadGPT open-source project
//
// SPDX-FileCopyrightText: 2024 Stanford University and the project authors (see CONTRIBUTORS.md)
//
// SPDX-License-Identifier: MIT
//

/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as SigninIndexImport } from './routes/~signin/~index'
import { Route as DashboardIndexImport } from './routes/~_dashboard/~index'


// Create/Update Routes

const SigninIndexRoute = SigninIndexImport.update({
  id: '/signin/',
  path: '/signin/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/_dashboard/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/signin/': {
      id: '/signin/'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof DashboardIndexRoute
  '/signin': typeof SigninIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof DashboardIndexRoute
  '/signin': typeof SigninIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_dashboard/': typeof DashboardIndexRoute
  '/signin/': typeof SigninIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/signin'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/signin'
  id: '__root__' | '/_dashboard/' | '/signin/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  SigninIndexRoute: typeof SigninIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  SigninIndexRoute: SigninIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/_dashboard/",
        "/signin/"
      ]
    },
    "/_dashboard/": {
      "filePath": "~_dashboard/~index.tsx"
    },
    "/signin/": {
      "filePath": "~signin/~index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
