#
# This source file is part of the Stanford Biodesign Digital Health RadGPT open-source project
#
# SPDX-FileCopyrightText: 2024 Stanford University and the project authors (see CONTRIBUTORS.md)
#
# SPDX-License-Identifier: MIT
#

name: Deployment Firebase Radgraph

on:
  push:
    branches:
      - main
    paths:
      - radgraph_function/**
  workflow_dispatch:
    inputs:
      environment:
        description: |
          The GitHub deployment environment.
        required: true
        default: "development"
        type: choice
        options:
          - development
          - staging
          - production
  workflow_call:
    inputs:
      environment:
        description: |
          The GitHub deployment environment.
        required: false
        type: string
        default: development

concurrency:
  group: deployment-radgraph-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  determineenvironment:
    name: Determine Environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Determine Environment
        id: set-env
        run: |
          if [[ -z "${{ inputs.environment }}" ]]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
          else
            echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
          fi
  vars:
    name: Inject Environment Variables In Deployment Workflow
    needs: determineenvironment
    runs-on: ubuntu-latest
    environment: ${{ needs.determineenvironment.outputs.environment }}
    outputs:
      FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}
    steps:
      - run: |
          echo "Injecting Environment Variables In Deployment Workflow: ${{ vars.FIREBASE_PROJECT_ID }}"
  buildandtest:
    name: Build and Test
    needs: determineenvironment
    uses: ./.github/workflows/build-and-test.firebase.yml
    permissions:
      contents: read
      checks: write
    secrets: inherit
  e2e:
    name: End-to-end Test
    uses: ./.github/workflows/playwright-e2e.yml
    permissions:
      contents: read
      checks: write
    secrets: inherit
  deploygooglecloudrun:
    name: Deploy Google Cloud Run Function
    needs: [determineenvironment, vars, e2e, buildandtest]
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Setup Python Virutal Environment
        working-directory: radgraph_function
        run: |
          python3.10 -m venv venv
          . venv/bin/activate
          python3.10 -m pip install -r requirements.txt
      - name: Download RadGraph Model
        working-directory: radgraph_function
        run: |
          . venv/bin/activate
          python3.10 setup.py
      - name: Deploy to Google Cloud Run
        working-directory: radgraph_function
        run: |
          echo -n "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_BASE64 }}" | base64 -d > "$RUNNER_TEMP/google-application-credentials.json"
          gcloud auth login --cred-file=$RUNNER_TEMP/google-application-credentials.json
          gcloud config set project ${{ vars.GOOGLE_CLOUD_PROJECT_ID }}
          sh deploy.sh
      - name: Clean up Google application credentials
        if: always()
        run: |
          rm -rf $RUNNER_TEMP/google-application-credentials.json || true
